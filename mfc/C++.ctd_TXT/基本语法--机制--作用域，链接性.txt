作用域，链接性

1处定义   ->   多处声明   ->链接到定义

作用域表示：声明的位置决定了有效作用区间

链接性：表示定义的标识符是否可以被其他声明链接到（内部，外部，无）

extern关键字：表示对外部变量的声明。

---------------------------------------------------------------------------------------------------------------------------------
static int a;不会生成符号表
int b;如果有extern 有链接属性，那么会生成符号表
fun()
{
    extern int a;声明变量a 首先会找本文件，然后找其他文件
}‎
int c=10;

---------------------------------------------------------------------------------------------------------------------------------



通过static可以改变默认具有extern变量的链接性为内部链接性

只有定义可以初始化赋初值


作用域：
    代码块作用域
    文件作用域
    
    
链接性：
    外部链接性
    无链接性

存储特性：
    静态存储
    动态存储

    
全局变量
    作用域为文件作用域，
    默认具有外部链接性，通过extern修饰声明可以扩展到另一个文件相应的作用域内。 static修饰定义，修改为无链接性。
    存储特性为静态存储。



局部变量
    作用域为代码块作用域，
    无链接性
    存储为动态存储，static 可以修改为静态存储。
    
技巧：
    首先弄清楚是声明还是定义。定义才是主体，声明只是对主体的一种延伸，扩展。
    
    下面这种情况：
        extern int a; a.c
        extern int a; b.c
    如果使用，编译器会不知道哪个才是定义。会出错。
    因此，最好，定义不要加extern，赋初值。
    

    

